<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Go on Dan`s Blog</title>
        <link>https://d4n-sec.github.io/tags/go/</link>
        <description>Recent content in Go on Dan`s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>DanSec</copyright>
        <lastBuildDate>Wed, 06 Mar 2024 14:45:23 +0800</lastBuildDate><atom:link href="https://d4n-sec.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Go Study</title>
        <link>https://d4n-sec.github.io/p/go-study/</link>
        <pubDate>Wed, 06 Mar 2024 14:45:23 +0800</pubDate>
        
        <guid>https://d4n-sec.github.io/p/go-study/</guid>
        <description>&lt;img src="https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/OIP-C.jpg" alt="Featured image of post Go Study" /&gt;&lt;p&gt;Go学习难点记录与解决（希望能解决）&lt;/p&gt;
&lt;h1 id=&#34;混淆点&#34;&gt;混淆点&lt;/h1&gt;
&lt;p&gt;1.Go的包导入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;导入本质，导入顺序，依赖顺序以及导入优先级，默认路径，为什么是这个默认路径，如何结合默认路径设计项目结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240129183550897.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240129183550897&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240129183602815.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240129183602815&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;且同一目录下的所有&lt;code&gt;.go&lt;/code&gt;文件必须同属于一个package&lt;/p&gt;
&lt;p&gt;2.基本类型和数组传参是传值（值复制）（待验证数组）&lt;/p&gt;
&lt;p&gt;3.函数传参传地址如何使用（传地址值，传引用）如何使用&lt;/p&gt;
&lt;p&gt;4.自定义数据类型（给类型起别名但是严格区分）的意义何在，使用场景&lt;/p&gt;
&lt;p&gt;5.匿名函数常用形式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240129184519215.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240129184519215&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;全程序调用本文件的匿名函数如何处理：将匿名函数赋值给全局变量即可&lt;/p&gt;
&lt;p&gt;6.闭包使用的内存图解，闭包的使用场景和妙用&lt;/p&gt;
&lt;p&gt;7.defer 关键字的使用场景 妙用？&lt;/p&gt;
&lt;p&gt;8.&lt;code&gt;strings.TrimSpace(&amp;quot;&amp;quot;)&lt;/code&gt;处理去掉了左右两边的空格，会去掉字符串结尾的&lt;code&gt;\n&lt;/code&gt;吗？&lt;/p&gt;
&lt;p&gt;9.数组初始化&lt;/p&gt;
&lt;p&gt;一维&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240130110603551.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240130110603551&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;二维&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240201163913218.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240201163913218&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;二维数组遍历&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240201164307806.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240201164307806&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;tips&#34;&gt;tips&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;1.本地保存页面路径&lt;code&gt;D:\Program Files (Green)\JJDown\Download&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.函数 retrun 支持在返回类型声明处定义返回变量名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://d4n-picture-database.oss-cn-beijing.aliyuncs.com/img/image-20240129183057720.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240129183057720&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;3.全局变量初始化&amp;gt;init函数&amp;gt;main函数  被导包文件init&amp;gt;导包文件 且被导包深度优先&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
